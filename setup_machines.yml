- name: Generate SSH Key on Host
  hosts: localhost
  connection: local
  tasks:
    - name: Generate SSH key
      openssh_keypair:
        path: /home/ec2-user/.ssh/cw_key
        force: no  # Do not overwrite if key already exists
      register: ssh_key

- name: Distribute SSH Key to all machines
  hosts: all
  tasks:
    # - name: Copy private key to remote machines
    #   copy:
    #     src:  /home/ec2-user/.ssh/cluster_key
    #     dest: /home/ec2-user/.ssh/cluster_key
    #     mode: '0600' 
    #     owner: ec2-user
    #     group: ec2-user
    - name: Add the public key to remote machine
      authorized_key:
        user: ec2-user
        state: present
        key: "{{ hostvars['localhost']['ssh_key']['public_key'] }}"

# - name: on the device, get the data volume mounted and ready to use
#   hosts: clusters
#   tasks:
#     - name: create a mount point for the data volume
#       ansible.builtin.file:
#         path: data
#         state: directory
#         mode: '0755'  
#     - name: create a folder for storing hhsearch program
#       ansible.builtin.file:
#         path: data/hhsuite
#         state: directory
#         mode: '0755' 
#     - name: create a folder for storing pdb70 database
#       ansible.builtin.file:
#         path: data/pdb70
#         state: directory
#         mode: '0755' 
#     - name: format the volume as ext4
#       community.general.filesystem:
#         dev: /dev/nvme1n1
#         fstype: ext4
#       become: true
#     - name: mount the filesystem
#       ansible.posix.mount:
#         name: data
#         src: /dev/nvme1n1
#         fstype: ext4
#         state: mounted 
#       become: true
#     - name: change the owner back to ec2-user after mounting
#       become: true
#       ansible.builtin.file:
#         path: data/
#         state: directory
#         mode: 0755
#         owner: ec2-user
        